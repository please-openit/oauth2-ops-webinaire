worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;
# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
  worker_connections 1024;
}

http {
   lua_package_path '/usr/local/openresty/lualib/?.lua;;';
   resolver 8.8.8.8;
   include /etc/nginx/conf.d/*.conf;
   # cache for discovery metadata documents
   lua_shared_dict discovery 1m;
   # cache for JWKs
   lua_shared_dict jwks 1m;
   lua_ssl_verify_depth 2;
   lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
   index   index.html index.htm;
   server {

    listen 80 default_server;
    server_name _;
    set $session_secret 723p4hR234t36VsCD8g565325IC0022G;
    #return 301 https://$host$request_uri;
      access_by_lua_block {

          local function has_value (tab, val)
              for index, value in ipairs(tab) do
                  if value == val then
                      return true
                  end
              end

              return false
          end

          local opts = {
             introspection_endpoint = "https://app.please-open.it/auth/realms/122aa842-0cf0-48e6-a5bc-cca00254a9bb/protocol/openid-connect/token/introspect",
             client_id = "files",
             client_secret = "4c87d1e8-bd16-4249-a4cd-41cc577e3073",
             auth_accept_token_as = "header"
          }
          -- call authenticate for OpenID Connect user authentication
          local res, err = require("resty.openidc").introspect(opts)
          if err then
            ngx.status = 403
            ngx.say(err)
            ngx.exit(ngx.HTTP_FORBIDDEN)
          end

          file=string.match(ngx.var.request_uri, '[^/]+')
          if has_value(res.resource_access.files.roles, file) == false then
            ngx.status = 403
            ngx.say(err)
           ngx.exit(ngx.HTTP_FORBIDDEN)
          end

          ngx.log(ngx.ERR, realm )

          -- ngx.req.set_header("Authorization", "Bearer "..res.access_token)

      }

    large_client_header_buffers 4 32k;
        location / {
          alias /files/;
          autoindex on;
          autoindex_format json;
      }
       # I disbled caching so the browser won't cache the site.
       expires           0;
       add_header        Cache-Control private;
       # redirect server error pages to the static page /40x.html
       #
       error_page 404 /404.html;
           location = /40x.html {
       }
       # redirect server error pages to the static page /50x.html
       #
       error_page 500 502 503 504 /50x.html;
           location = /50x.html {
       }
   }

}

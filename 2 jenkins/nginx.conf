worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;
# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
  worker_connections 1024;
}

http {
   lua_package_path '/usr/local/openresty/lualib/?.lua;;';
   resolver 8.8.8.8;
   include /etc/nginx/conf.d/*.conf;
   # cache for discovery metadata documents
   lua_shared_dict discovery 1m;
   # cache for JWKs
   lua_shared_dict jwks 1m;
   lua_ssl_verify_depth 2;
   lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
   index   index.html index.htm;
   server {

    listen 80 default_server;
    server_name _;
    set $session_secret 723p4hR234t36VsCD8g565325IC0022G;
    #return 301 https://$host$request_uri;
      access_by_lua '
          local opts = {
             redirect_uri_path = "/redirect",
             discovery = "https://app.please-open.it/auth/realms/122aa842-0cf0-48e6-a5bc-cca00254a9bb/.well-known/openid-configuration",
             client_id = "jenkins",
             client_secret = "4e5d8fe2-1acd-49a3-9b13-c103ed7b17fd",
             scope = "openid email",
             redirect_uri_scheme = "http",
             auth_accept_token_as = "header",
             session_contents = {access_token=true,user=true}
          }
          -- call authenticate for OpenID Connect user authentication
          local res, err = require("resty.openidc").authenticate(opts)
          if err then
            ngx.status = 500
            ngx.say(err)
            ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
          end
          --ngx.req.set_header("Authorization", "Bearer "..res.access_token)
          ngx.req.set_header("X-Forwarded-User", res.user.preferred_username)
	';

        location / {
          proxy_pass http://jenkins:8080;
          proxy_http_version 1.1;
          proxy_redirect off;
          proxy_buffering off;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_read_timeout 86400;
      }
       # I disbled caching so the browser won't cache the site.
       expires           0;
       add_header        Cache-Control private;
       # redirect server error pages to the static page /40x.html
       #
       error_page 404 /404.html;
           location = /40x.html {
       }
       # redirect server error pages to the static page /50x.html
       #
       error_page 500 502 503 504 /50x.html;
           location = /50x.html {
       }
   }
 
}